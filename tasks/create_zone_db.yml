---
- name: Generate filename.
  set_fact: "zone_filename=db.{{ bind_zone.key }}"
  when: bind_zone.value.textfile is not defined
  tags: setup_zones

- block:
  - name: Generate filename.
    set_fact: "zone_filename={{ bind_zone.value.textfile.split('/')[-1] }}"

  - name: "Copy and validate {{ bind_zone.key }} text zone file."
    copy:
      src: "{{ bind_zone.value.textfile }}"
      dest: "{{ bind_zones_dir }}/{{ zone_filename }}"
      owner: "{{ bind_user }}"
      group: "{{ bind_group }}"
      mode: 0644
      validate: "/usr/sbin/named-checkzone {{ bind_zone.key }} %s"
    notify: reload bind
  when: bind_zone.value.textfile is defined
  tags: setup_zones

- block:
  - name: "Loading zone content for {{ bind_zone.key }} from yaml file"
    include_vars:
      file: "{{ bind_zone.value.ymlfile }}"
      name: my_records
    when: bind_zone.value.ymlfile is defined

  - name: "Building records list..."
    set_fact:
      full_zone: "{{ zones[bind_zone.key] | combine( (my_records|default({})), recursive=True) }}"

  - name: Setup zones files for {{ bind_zone.key }} and verify
    template:
      src: db.zones.template.j2
      dest: "{{ bind_zones_dir }}/{{ zone_filename }}"
      owner: "{{ bind_user }}"
      group: "{{ bind_group }}"
      mode: 0644
      validate: "/usr/sbin/named-checkzone {{ bind_zone.key }} %s"
      force: "{{ 'no' if full_zone.type == 'slave' else (full_zone.force_file|default(omit)) }}"
    notify: reload bind
  when: bind_zone.value.textfile is not defined
  tags: setup_zones

- set_fact: "list_zone_files={{ list_zone_files + [zone_filename] }}"
  when : remove_unmanaged_files
  tags: setup_zones
